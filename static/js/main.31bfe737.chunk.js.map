{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthFrom","useState","email","setEmail","password","setPassword","newAccout","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","id","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","AuthForm","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","delete","attachmentUrl","refFromURL","toggleEditing","update","key","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","newDispalyName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","photoUrl","photoURL","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31bfe737.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthFrom = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccout, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccout) {\n                //Create new accout\n                data = await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                //log in\n                data = await authService.signInWithEmailAndPassword(\n                    email,\n                    password\n                );\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    type=\"submit\"\n                    className=\"authInput authSubmit\"\n                    value={newAccout ? \"Create Accout\" : \"Log In\"}\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccout ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\nexport default AuthFrom;\n","import { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n    };\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button\n                    onClick={onSocialClick}\n                    name=\"google\"\n                    className=\"authBtn\"\n                >\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button\n                    onClick={onSocialClick}\n                    name=\"github\"\n                    className=\"authBtn\"\n                >\n                    Continue with GitHub <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default Auth;\n","import { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\n            \"Are you sure you want to delete this nweet?\"\n        );\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if (nweetObj.attachmentUrl !== \"\") {\n                await storageService\n                    .refFromURL(nweetObj.attachmentUrl)\n                    .delete();\n            }\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n    return (\n        <div className=\"nweet\" key={nweetObj.id}>\n            {editing ? (\n                <>\n                    {isOwner && (\n                        <>\n                            <form\n                                onSubmit={onSubmit}\n                                className=\"container nweetEdit\"\n                            >\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Edit your Nweet\"\n                                    value={newNweet}\n                                    onChange={onChange}\n                                    required\n                                    autoFocus\n                                    className=\"formInput\"\n                                />\n                                <input\n                                    type=\"submit\"\n                                    value=\"Update\"\n                                    className=\"formBtn\"\n                                ></input>\n                            </form>\n                            <button\n                                onClick={toggleEditing}\n                                className=\"formBtn cancelBtn\"\n                            >\n                                Cancel\n                            </button>\n                        </>\n                    )}\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <>\n                            <img src={nweetObj.attachmentUrl} alt=\"\" />\n                        </>\n                    )}\n                    {isOwner && (\n                        <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(\n                attachment,\n                \"data_url\"\n            );\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(null);\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    type=\"text\"\n                    value={nweet}\n                    placeholder=\"What's on your mind?\"\n                    onChange={onChange}\n                    maxLength={120}\n                    className=\"factoryInput__input\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"&rarr;\"\n                    className=\"factoryInput__arrow\"\n                />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                        alt=\"img\"\n                    />\n                    <div\n                        className=\"factoryForm__clear\"\n                        onClick={onClearAttachment}\n                    >\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    );\n};\nexport default NweetFactory;\n","import { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        // getNweets();\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data(),\n            }));\n            setNweets(nweetArray);\n        });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    ></Nweet>\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;\n","import { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => (\n    <nav>\n        <ul\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}\n        >\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon\n                        icon={faTwitter}\n                        color={\"#04AAFF\"}\n                        size=\"2x\"\n                    />\n                </Link>\n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon\n                        icon={faUser}\n                        color={\"#04AAFF\"}\n                        size=\"2x\"\n                    />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Profile = ({ refreshUser, userObj }) => {\n    //const history = useHistory();\n    const [newDispalyName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        //history.push(\"/\");\n    };\n\n    const getMyNweets = async () => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\", \"desc\")\n            .get();\n        console.log(nweets.docs.map((doc) => doc.data()));\n    };\n\n    useEffect(() => {\n        getMyNweets();\n    });\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDispalyName) {\n            await userObj.updateProfile({\n                displayName: newDispalyName,\n            });\n            refreshUser();\n        }\n    };\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Display Name\"\n                    value={newDispalyName}\n                    onChange={onChange}\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <button\n                className=\"formBtn cancelBtn logOut\"\n                onClick={onLogOutClick}\n            >\n                Log Out\n            </button>\n        </div>\n    );\n};\nexport default Profile;\n","import React from \"react\";\nimport {\n    HashRouter as Router,\n    Redirect,\n    Route,\n    Switch,\n} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}></Navigation>}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile\n                                refreshUser={refreshUser}\n                                userObj={userObj}\n                            />\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\"></Redirect>\n                    </div>\n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\"></Redirect>\n                    </>\n                )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    photoUrl: user.photoURL,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            photoUrl: user.photoURL,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    refreshUser={refreshUser}\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                ></AppRouter>\n            ) : (\n                \"Initializing...\"\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}